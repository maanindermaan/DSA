// // Add two numbers represented by linked lists
// class Solution
// {
//     private:
//         Node* reverse(Node* head){
            
            
//             Node* curr = head;
//             Node* prev = NULL;
//             Node* next = NULL;
            
        
//             while(curr!=NULL){
                
//                 next = curr->next;
//                 curr->next = prev;
//                 prev = curr;
//                 curr = next;
                
//         }
            
//         return prev;
//     }
    
    
//     void insertAtTail (struct Node* &head, struct Node* &tail, int val) {
//         Node* temp = new Node (val);
// //empty list
//         if (head == NULL) {
//             head = temp;
//             tail = temp;
//             return;
//         }
//         else{
//             tail -> next = temp;
//             tail = temp;
//         }
//     }
    
    
//     struct Node* add(struct Node* first, struct Node* second){
//         int carry = 0;
//         Node* ansHead = NULL;
//         Node* ansTail = NULL;
//         while(first != NULL && second != NULL){
//             int sum = carry + first->data + second->data;
//             int digit = sum % 10;
//             // create node and add in ans linked list
//             insertAtTail(ansHead, ansTail , digit);
//             int carry = sum / 10;
//             first = first->next;
//             second = second->next;
//         }
        
//         while(first!= NULL){
//             int sum = carry + first->data;
//             int digit = sum % 10;
//             // create node and add in ans linked list
//             insertAtTail(ansHead, ansTail , digit);
//             int carry = sum / 10;
//             first = first->next;
//         }
        
        
//                 while(second != NULL){
//             int sum = carry + second->data;
//             int digit = sum % 10;
//             // create node and add in ans linked list
//             insertAtTail(ansHead, ansTail , digit);
//             int carry = sum / 10;
//             second = second->next;
//         }
        
        
//         while(carry != NULL){
//             int sum = carry;
//             int digit = sum % 10;
//             // create node and add in ans linked list
//             insertAtTail(ansHead, ansTail , digit);
//             int carry = sum / 10;
//         }
        
        
        
//     }
    
    
//     public:
//     //Function to add two numbers represented by linked list.
//     struct Node* addTwoLists(struct Node* first, struct Node* second)
//     {
//         // Step 1 -> reverse LL;
//         first = reverse(first);
//         second = reverse(second);
        
//         // Step 2 -> Add them
//         Node* ans = add(first , second);
        
//         // Step 3 -> Reverse linked list again
//         ans = reverse(ans);
        
//         return ans;
//     }
// };


// //{ Driver Code Starts.

// int main()
// {
//     int t;
//     cin>>t;
//     while(t--)
//     {
//         int n, m;
        
//         cin>>n;
//         Node* first = buildList(n);
        
//         cin>>m;
//         Node* second = buildList(m);
//         Solution ob;
//         Node* res = ob.addTwoLists(first,second);
//         printList(res);
//     }
//     return 0;
// }
